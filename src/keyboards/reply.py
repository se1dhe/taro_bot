"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from src.config import WEBAPP_URL
import urllib.parse
from datetime import datetime

def get_monthly_reading_month() -> str:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã.
    –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞ —Å 16 —á–∏—Å–ª–∞ –º–µ—Å—è—Ü–∞ –ø–æ 15 —á–∏—Å–ª–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞,
    —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü.
    """
    now = datetime.now()
    current_day = now.day
    
    if current_day >= 16:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å >= 16, —Ç–æ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü
        next_month = now.month + 1
        if next_month > 12:
            next_month = 1
        month_names = {
            1: "—è–Ω–≤–∞—Ä—å", 2: "—Ñ–µ–≤—Ä–∞–ª—å", 3: "–º–∞—Ä—Ç", 4: "–∞–ø—Ä–µ–ª—å",
            5: "–º–∞–π", 6: "–∏—é–Ω—å", 7: "–∏—é–ª—å", 8: "–∞–≤–≥—É—Å—Ç",
            9: "—Å–µ–Ω—Ç—è–±—Ä—å", 10: "–æ–∫—Ç—è–±—Ä—å", 11: "–Ω–æ—è–±—Ä—å", 12: "–¥–µ–∫–∞–±—Ä—å"
        }
        return month_names[next_month]
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å < 16, —Ç–æ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        month_names = {
            1: "—è–Ω–≤–∞—Ä—å", 2: "—Ñ–µ–≤—Ä–∞–ª—å", 3: "–º–∞—Ä—Ç", 4: "–∞–ø—Ä–µ–ª—å",
            5: "–º–∞–π", 6: "–∏—é–Ω—å", 7: "–∏—é–ª—å", 8: "–∞–≤–≥—É—Å—Ç",
            9: "—Å–µ–Ω—Ç—è–±—Ä—å", 10: "–æ–∫—Ç—è–±—Ä—å", 11: "–Ω–æ—è–±—Ä—å", 12: "–¥–µ–∫–∞–±—Ä—å"
        }
        return month_names[now.month]

def get_main_keyboard() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    """
    month = get_monthly_reading_month()
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üé¥ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
            [KeyboardButton(
                text=f"üìÖ –†–∞—Å–∫–ª–∞–¥ –Ω–∞ {month}",
                web_app=WebAppInfo(url=f"{WEBAPP_URL}/monthly_reading")
            )],
            [KeyboardButton(text="üí´ –ö—É–ø–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥—ã")],
            [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
        ],
        resize_keyboard=True
    )
    return keyboard

def get_question_actions_keyboard(question: str) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞
    """
    encoded_question = urllib.parse.quote(question)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(
                text="üÉè –í—ã–±—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã",
                web_app=WebAppInfo(url=f"{WEBAPP_URL}?question={encoded_question}")
            )],
            [KeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    return keyboard 