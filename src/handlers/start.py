"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
"""
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from datetime import datetime

from keyboards.reply import get_main_keyboard
from database.models import User
from config import TAROT_SETTINGS, BOT_USERNAME
from handlers.question import QuestionStates

router = Router()

@router.message(F.text.startswith("/start"))
async def handle_start(message: types.Message, state: FSMContext, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user = await session.execute(
        select(User).where(User.telegram_id == message.from_user.id)
    )
    user = user.scalar_one_or_none()
    
    if not user:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
        args = message.text.split()
        referral_id = None
        if len(args) > 1:
            try:
                referral_id = int(args[1])
            except ValueError:
                pass
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        referrer = None
        if referral_id:
            referrer = await session.execute(
                select(User).where(User.id == referral_id)
            )
            referrer = referrer.scalar_one_or_none()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name,
            language="ru",
            readings_remaining=TAROT_SETTINGS["free_readings_count"],
            is_active=True,
            created_at=datetime.utcnow(),
            referral_id=referrer.id if referrer else None
        )
        session.add(user)
        await session.commit()
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–µ—Ä, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –µ–≥–æ —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if referrer:
            referrer.referrals_count += 1
            # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä—É
            referrer.readings_remaining += TAROT_SETTINGS["referral_bonus_readings"]
            await session.commit()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
            try:
                await message.bot.send_message(
                    referrer.telegram_id,
                    f"üéâ –£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! @{message.from_user.username or message.from_user.first_name} "
                    f"–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ. –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {TAROT_SETTINGS['referral_bonus_readings']} "
                    "–±–æ–Ω—É—Å–Ω—ã—Ö –≥–∞–¥–∞–Ω–∏–π!"
                )
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É: {e}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(QuestionStates.main_menu)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –≥–∞–¥–∞–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ! "
        f"–£ –≤–∞—Å –µ—Å—Ç—å {user.readings_remaining} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–∞–¥–∞–Ω–∏–π.\n\n"
        "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è! "
        f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/{BOT_USERNAME}?start={user.id}"
    )
    
    await message.answer(
        welcome_text,
        reply_markup=get_main_keyboard()
    ) 