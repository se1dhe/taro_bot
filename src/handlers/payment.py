"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π
"""
import hashlib
from datetime import datetime, timedelta
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from config import (
    ROBOKASSA_LOGIN, ROBOKASSA_PASSWORD1,
    TARIFF_SMALL_PRICE, TARIFF_SMALL_READINGS, TARIFF_SMALL_DURATION,
    TARIFF_MEDIUM_PRICE, TARIFF_MEDIUM_READINGS, TARIFF_MEDIUM_DURATION,
    TARIFF_UNLIMITED_PRICE, TARIFF_UNLIMITED_DURATION
)
from keyboards.payment import get_payment_menu
from database.models import User, Payment

router = Router()

@router.message(F.text == "üí´ –ö—É–ø–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥—ã")
async def handle_buy_subscription(message: Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ —Ä–∞—Å–∫–ª–∞–¥–æ–≤ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user = await session.execute(
        select(User).where(User.telegram_id == message.from_user.id)
    )
    user = user.scalar_one_or_none()
    
    if not user:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ /start")
        return

    text = "üëã –†–∞—Å–∫–ª–∞–¥—ã - –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –∫ –≤—Å–µ–ª–µ–Ω–Ω–æ–π. –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤ –¥—Ä—É–∑–µ–π, —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏—Ö."
    await message.answer(text, reply_markup=get_payment_menu())

@router.message(Command("buy"))
async def show_payment_menu(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –æ–ø–ª–∞—Ç—ã"""
    text = "üëã –†–∞—Å–∫–ª–∞–¥—ã - –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –∫ –≤—Å–µ–ª–µ–Ω–Ω–æ–π. –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤ –¥—Ä—É–∑–µ–π, —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏—Ö."
    await message.answer(text, reply_markup=get_payment_menu())

@router.callback_query(F.data.startswith("buy_"))
async def process_buy(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤"""
    tariff = callback.data.split("_")[1]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞—Ä–∏—Ñ–∞
    if tariff == "small":
        amount = TARIFF_SMALL_PRICE
        description = f"–¢–∞—Ä–∏—Ñ –Ω–∞ {TARIFF_SMALL_READINGS} —Ä–∞—Å–∫–ª–∞–¥–∞"
        readings = TARIFF_SMALL_READINGS
        duration = TARIFF_SMALL_DURATION
    elif tariff == "medium":
        amount = TARIFF_MEDIUM_PRICE
        description = f"–¢–∞—Ä–∏—Ñ –Ω–∞ {TARIFF_MEDIUM_READINGS} —Ä–∞—Å–∫–ª–∞–¥–æ–≤"
        readings = TARIFF_MEDIUM_READINGS
        duration = TARIFF_MEDIUM_DURATION
    else:  # unlimited
        amount = TARIFF_UNLIMITED_PRICE
        description = "–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∞ –º–µ—Å—è—Ü"
        readings = -1  # -1 –æ–∑–Ω–∞—á–∞–µ—Ç –±–µ–∑–ª–∏–º–∏—Ç
        duration = TARIFF_UNLIMITED_DURATION

    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞
    payment_id = f"{callback.from_user.id}_{int(datetime.now().timestamp())}"
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –¥–ª—è Robokassa
    signature = hashlib.md5(f"{ROBOKASSA_LOGIN}:{amount}:{payment_id}:{ROBOKASSA_PASSWORD1}".encode()).hexdigest()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
    payment_url = f"https://auth.robokassa.ru/Merchant/Index.aspx?" \
                 f"MerchantLogin={ROBOKASSA_LOGIN}&" \
                 f"OutSum={amount}&" \
                 f"InvId={payment_id}&" \
                 f"Description={description}&" \
                 f"SignatureValue={signature}&" \
                 f"IsTest=1"  # –£–±–µ—Ä–∏—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    payment = Payment(
        user_id=callback.from_user.id,
        amount=amount,
        payment_id=payment_id,
        readings_count=readings,
        duration_days=duration,
        status="pending",
        created_at=datetime.utcnow()
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    session = callback.message.bot.session
    session.add(payment)
    await session.commit()
    
    await callback.message.answer(
        f"üí´ –û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ:\n"
        f"- {description}\n"
        f"- –°—Ç–æ–∏–º–æ—Å—Ç—å: {amount}‚ÇΩ\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:",
        reply_markup=get_payment_methods_keyboard(payment_url, payment_id)
    )
    await callback.answer()

@router.callback_query(F.data == "get_free_readings")
async def process_free_readings(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤"""
    await callback.message.answer(
        "üéÅ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã, –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π –≤ –±–æ—Ç–∞!\n"
        "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥.\n\n"
        "–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/your_bot?start=ref_" + str(callback.from_user.id)
    )
    await callback.answer()

@router.callback_query(F.data == "pay_stars")
async def process_stars_payment(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ Telegram Stars"""
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Telegram Stars
    await callback.message.answer(
        "‚≠êÔ∏è –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã."
    )
    await callback.answer()

def get_payment_methods_keyboard(payment_url: str, payment_id: str):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –º–µ—Ç–æ–¥–∞–º–∏ –æ–ø–ª–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()
    
    builder.row(InlineKeyboardButton(
        text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π",
        url=payment_url
    ))
    
    builder.row(InlineKeyboardButton(
        text="‚≠êÔ∏è –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ Telegram Stars",
        callback_data=f"stars_{payment_id}"
    ))
    
    return builder.as_markup() 